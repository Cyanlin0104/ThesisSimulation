#pragma once

#include "Robot.h"

// 建立手臂(黑金剛+八軸)
namespace NTU_Arm
{
	// Robot Kinematics: 傳入Robot物件參考，並設定「黑金剛」DH Frame，最後Build Robot
	void Build_KArm(Rbt::Robot& robot);
	
	// Robot Dynamics: 傳入DynRobot物件參考，並設定「黑金剛」DH Frame 和 Dynamics 參數，最後Build Robot
	void Build_KArm_Dyn(Rbt::DynRobot& robot);

	// Robot Kinematics: 傳入Robot物件參考，並設定「八軸」DH Frame，最後Build Robot
	void Build_8AxisArm(Rbt::Robot& robot);

	// Robot Dynamics: 傳入DynRobot物件參考，並設定「八軸」DH Frame 和 Dynamics 參數，最後Build Robot
	void Build_8AxisArm_Dyn(Rbt::DynRobot& robot);
}

// 建立手臂(黑金剛)與手掌(新手掌)
namespace NTU_ArmHand
{
	// Robot Kinematics: 傳入Robot物件參考，並設定「黑金剛+新手掌」DH Frame，最後Build Robot
	void Build_ArmHand(Rbt::Robot& robot);

	// Robot Dynamics: 傳入DynRobot物件參考，並設定「黑金剛+新手掌」DH Frame 和 Dynamics 參數，最後Build Robot
	void Build_ArmHand_Dyn(Rbt::DynRobot& robot);
}


// 紀錄手臂(黑金剛+八軸)的所有 Kinematics 參數
namespace NTU_Arm
{
	#pragma region 黑金剛DH參數 {a, alpha, d, theta} 單位:[m, rad, m, rad]
	
	const double KArm_a[]     = { 0, 0, 0.01, -0.01, 0, 0.131 }; // 原本a[5] = 0.12982
	const double KArm_alpha[] = { Deg2Rad(90), Deg2Rad(90), Deg2Rad(90), Deg2Rad(-90), Deg2Rad(90), Deg2Rad(90) };
	const double KArm_d[]     = { 0, 0, 0.371, 0, 0.28, 0 }; // d[0] = 1.220 平台 沒加上去
	const double KArm_theta[] = { 0, Deg2Rad(180), Deg2Rad(180), Deg2Rad(-90), Deg2Rad(180), Deg2Rad(90) };

	const double KArm_JointMin[] = { Deg2Rad(-100), Deg2Rad(-90), Deg2Rad(-115), Deg2Rad(-40), Deg2Rad(-115), Deg2Rad(-85) };
	const double KArm_JointMax[] = { Deg2Rad(100),  Deg2Rad(90),  Deg2Rad(115),  Deg2Rad(180), Deg2Rad(115),  Deg2Rad(85) };

	#pragma endregion

	#pragma region 八軸DH參數 {a, alpha, d, theta} 單位:[m, rad, m, rad]
	
	const double _8AxisArm_a[]     = { 0, 0, 0, 0, 0, 0, 0, 0 };
	const double _8AxisArm_alpha[] = { Deg2Rad(-90), Deg2Rad(90), Deg2Rad(90), Deg2Rad(90), Deg2Rad(90), Deg2Rad(90), Deg2Rad(90), Deg2Rad(0) };
	const double _8AxisArm_d[]     = { 0, 0.275, 0.108, 0.3, 0.108, 0.275, 0.108, 0.3585 }; // d[7] = 0.302 (無安裝力規), d[7] = 0.3585 (安裝力規+其它機構 302+56.5)
	const double _8AxisArm_theta[] = { Deg2Rad(0), Deg2Rad(-90), Deg2Rad(90), Deg2Rad(-90), Deg2Rad(90), Deg2Rad(0), Deg2Rad(-90), Deg2Rad(90) };

	const double _8AxisArm_JointMin[] = { Deg2Rad(-360), Deg2Rad(-360), Deg2Rad(-360), Deg2Rad(-360), Deg2Rad(-360), Deg2Rad(-360), Deg2Rad(-360), Deg2Rad(-360) };
	const double _8AxisArm_JointMax[] = { Deg2Rad(360),  Deg2Rad(360),  Deg2Rad(360),  Deg2Rad(360),  Deg2Rad(360),  Deg2Rad(360),  Deg2Rad(360),  Deg2Rad(360) };

	#pragma endregion
}

// 紀錄手臂(黑金剛+八軸)的所有 Dynamics 參數
namespace NTU_Arm
{
	#pragma region 黑金剛 Dynamics 參數
	
	// 每一軸質心 Mass (kg)
	const double KArm_M[] = { 1.529, 0.3443, 2.0337302, 0.2361282, 1.2460465, 0.274 };
							 
	
	// 每一軸質量中心位置 (m)，以各軸 Local Frame 來表示 {x, y, z}
	const double KArm_MC[][3] = {  
		                            {-0.0036486, -0.0342208, -0.0120718}, {0.0005776, 0.0067729, 0.019907}, {-0.0072167, -0.1381928, 0.0024225}, {0.0030856, -0.0003375, 0.0347586}, {-0.0023003,-0.1303481 ,0.0004472}, {0.000177, 0.0371, -0.001244}
							    };
	
	// 每一軸在質心上的轉動慣量 (kg-m^2) 慣性軸輸出平行各軸 Local Frame 座標，並以各軸 Local Frame 來表示 {Ixx, Ixy, Ixz, Iyy, Iyz, Izz}
	const double KArm_Inertial[][6] = { 
										  {0.0035076, 0, 0, 0.0021777, 0, 0.0024597}, {0.0002987, 0, 0, 0.0002606, 0, 0.0002629}, {0.0328595, 0, 0, 0.01517, 0, 0.0327091}, {0.0003051, 0, 0, 0.0001932, 0, 0.00023}, {0.0073442, 0, 0, 0.0008267, 0, 0.0073509}, {0.000198, 0, 0, 0.000124, 0, 0.000134}
									  };
	#pragma endregion

	#pragma region 八軸 Dynamics 參數

	// 每一軸質心 Mass (kg)
	const double _8AxisArm_M[] = { 3.74108, 0.47646, 3.93285, 0.43890, 3.44610, 0.35009, 2.78976, 1.19380 }; // Frame8 為夾爪
							 
	
	// 每一軸質量中心位置 (m)，以各軸 Local Frame 來表示 {x, y, z}
	const double _8AxisArm_MC[][3] = {  
										 {0.87e-3, 4.15e-3, 99.19e-3},   {0.02e-3, -16.58e-3, 22.27e-3}, {-1.01e-3, -4.16e-3, 106.69e-3}, {0.00e-3, -19.36e-3, 21.35e-3},
										 {-0.81e-3, -3.80e-3, 95.17e-3}, {0.00e-3, -20.99e-3, 23.04e-3}, {-0.05e-3, -4.05e-3, 80.77e-3},  {7.04e-3, -0.17e-3, -57.70e-3}
							         };
	
	// 每一軸在質心上的轉動慣量 (kg-m^2) 慣性軸輸出平行各軸 Local Frame 座標，並以各軸 Local Frame 來表示 {Ixx, Ixy, Ixz, Iyy, Iyz, Izz}
	const double _8AxisArm_Inertial[][6] = { 
										       {7472485.07e-9, -50146.37e-9, 76012.57e-9, 7313587.18e-9, 409005.01e-9, 1046397.35e-9},   {57026.77e-9, -161.24e-9, -264.26e-9, 37794.38e-9, 22698.44e-9, 32459.24e-9},
											   {7584756.80e-9, -34500.36e-9, -107185.46e-9, 7424102.57e-9, -374904.87e-9, 794029.96e-9}, {50696.14e-9, -172.84e-9, -222.66e-9, 35888.08e-9, 19570.89e-9, 25269.27e-9},
											   {1552314.53e-9, -12872.02e-9, -99050.03e-9, 1519295.86e-9, 114849.87e-9, 211228.82e-9},   {29312.32e-9, 87.14e-9, 109.05e-9, 22687.96e-9, 11715.92e-9, 10331.75e-9},
											   {631953.03e-9, -910.80e-9, 442.60e-9, 601691.04e-9, 45106.11e-9, 122563.59e-9},           {352.50e-9, 0.00e-9, 0.00e-9, 352.50e-9, 0.00e-9, 658.63e-9}
									       };
	#pragma endregion
}

// 紀錄手臂(黑金剛+八軸)的馬達參數
namespace NTU_Arm
{
	// 馬達轉一圈的 Encoder Count = Encoder_line * 4倍頻
	const unsigned int Encoder_Count = 512*4;

	
	// [黑金剛手臂] 每一軸GearBox減速比 
	const double KArm_Gr[] = { 200, 250, 200, 250, 200, 300 };

	// [八軸手臂] 每一軸GearBox減速比
	const double _8AxisArm_Gr[] = { 275, 275, 275, 150, 150, 100, 100, 75 };


	// [黑金剛手臂] 每軸馬達最大轉速(單位RPM)
	const double KArm_Motor_MaxSpeed[] = { 8000, 8000, 6000, 6000, 6000, 8000 };

	// [八軸手臂] 每軸馬達最大轉速(單位RPM)
	const double _8AxisArm_Motor_MaxSpeed[] = { 7000, 7000, 7000, 7000, 7000, 5333, 5333, 5000 };


	// [黑金剛手臂] 每軸馬達最大加速度(單位rad/s^2)
	const double KArm_Motor_MaxAcc[] = { 121e3, 121e3, 120e3, 120e3, 120e3, 120e3 };

	// [八軸手臂] 每軸馬達最大加速度(單位rad/s^2)
	const double _8AxisArm_Motor_MaxAcc[] = { 121e3, 121e3, 121e3, 121e3, 121e3, 130e3, 130e3, 74e3 };


	// [黑金剛手臂] 每軸馬達 Max Torque (單位：mNm)
	const double KArm_Motor_MaxTorque[] = { 157, 157, 38.06, 38.06, 38.06, 10.593 };

	// [八軸手臂] 每軸馬達 Max Torque (單位：mNm)
	const double _8AxisArm_Motor_MaxTorque[] = { 157, 157, 157, 157, 157, 70, 70, 35 };


	// [黑金剛手臂] 每軸馬達 Torque Const: Kt (單位：mNm/A)
	const double KArm_Motor_Kt[] = { 39.8, 39.8, 34.6, 34.6, 34.6, 32.1 };

	// [八軸手臂] 每軸馬達 Torque Const: Kt (單位：mNm/A)
	const double _8AxisArm_Motor_Kt[] = { 39.8, 39.8, 39.8, 39.8, 39.8, 37.7, 37.7, 41.3 };	
}

// 紀錄手臂(黑金剛)與手掌(新手掌)的所有 Dynamics 參數
namespace NTU_ArmHand
{
	// 每一軸質心 Mass (kg)
	const double ArmHand_M[] = { 
								 1.529, 0.3443, 2.0337302, 0.2361282, 1.2460465, 0.91641591,  // 黑金剛(手臂)，註：第6 Frame為加上新手掌Base的質量，若沒有新手掌則質量為 0.274
							     0.12755658, 0.0, 0.06569679, 0.01033518, 0.01895713,		  // 大拇指：4個主動Frame、1個被動Frame
							     0.0, 0.06569679, 0.01033518, 0.01895713,					  // 食指：  3個主動Frame、1個被動Frame
							     0.0, 0.06569679, 0.01033518, 0.01895713,					  // 中指：  3個主動Frame、1個被動Frame
							     0.0, 0.06569679, 0.01033518, 0.01895713,				      // 無名指：3個主動Frame、1個被動Frame
							     0.0, 0.06569679, 0.01033518, 0.01895713				      // 小拇指：3個主動Frame、1個被動Frame
							   };
	
	// 每一軸質量中心位置 (m)，以各軸 Local Frame 來表示 {x, y, z}
	const double ArmHand_MC[][3] = { 
								     // 黑金剛(手臂)，註：第6 Frame為新手掌加上Base的MC，若沒有新手掌則質心為 {0.000177, 0.0371, -0.001244}
		                             {-0.0036486, -0.0342208, -0.0120718}, {0.0005776, 0.0067729, 0.019907}, {-0.0072167, -0.1381928, 0.0024225}, {0.0030856, -0.0003375, 0.0347586}, {-0.0023003,-0.1303481 ,0.0004472}, {-0.05078395, 0.00226147, 0.02234823},
								  
								     // 大拇指：4個主動Frame、1個被動Frame
								     {-0.00091961, 0.03358681, 0.04274462}, {0.0, 0.0, 0.0}, {-0.02096940, -0.00043129, 0.00031887}, {-0.01274679, -0.00091413, 0.00160956}, {-0.012083, -0.00082725, 0.00001188},
								   
								     // 食指、中指、無名指、小拇指都是：  3個主動Frame、1個被動Frame
								     {0.0, 0.0, 0.0}, {-0.02096940, -0.00043129, 0.00031887}, {-0.01274679, -0.00091413, 0.00160956}, {-0.012083, -0.00082725, 0.00001188},
								     {0.0, 0.0, 0.0}, {-0.02096940, -0.00043129, 0.00031887}, {-0.01274679, -0.00091413, 0.00160956}, {-0.012083, -0.00082725, 0.00001188},
								     {0.0, 0.0, 0.0}, {-0.02096940, -0.00043129, 0.00031887}, {-0.01274679, -0.00091413, 0.00160956}, {-0.012083, -0.00082725, 0.00001188},
								     {0.0, 0.0, 0.0}, {-0.02096940, -0.00043129, 0.00031887}, {-0.01274679, -0.00091413, 0.00160956}, {-0.012083, -0.00082725, 0.00001188}
								   };
	
	// 每一軸在質心上的轉動慣量 (kg-m^2) 慣性軸輸出平行各軸 Local Frame 座標，並以各軸 Local Frame 來表示 {Ixx, Ixy, Ixz, Iyy, Iyz, Izz}
	const double ArmHand_Inertial[][6] = { 
										   // 黑金剛(手臂)，註：第6 Frame為新手掌加上Base的Inertial，若沒有新手掌則質心為 {0.000198, 0, 0, 0.000124, 0, 0.000134}
										   {0.0035076, 0, 0, 0.0021777, 0, 0.0024597}, {0.0002987, 0, 0, 0.0002606, 0, 0.0002629}, {0.0328595, 0, 0, 0.01517, 0, 0.0327091}, {0.0003051, 0, 0, 0.0001932, 0, 0.00023}, {0.0073442, 0, 0, 0.0008267, 0, 0.0073509}, {0.00138349, 0.00010311, -0.00002401, 0.00113374, -0.00008662, 0.00208662},
										 
										   // 大拇指：4個主動Frame、1個被動Frame
										   {0.00006552, -0.00000226, 0.00000495, 0.00005061, -0.00000423, 0.00004853}, {0, 0, 0, 0, 0, 0}, {0.00000740, 0.00000008, -0.00000066, 0.00001948, 0.0, 0.00002058}, {0.00000146, -0.00000002, -0.00000007, 0.00000193, 0.00000001, 0.00000111}, {0.00000149, -0.00000004, 0.0, 0.00000237, 0.0, 0.00000148},

										   // 食指、中指、無名指、小拇指都是：  3個主動Frame、1個被動Frame
										   {0, 0, 0, 0, 0, 0}, {0.00000740, 0.00000008, -0.00000066, 0.00001948, 0.0, 0.00002058}, {0.00000146, -0.00000002, -0.00000007, 0.00000193, 0.00000001, 0.00000111}, {0.00000149, -0.00000004, 0.0, 0.00000237, 0.0, 0.00000148},
										   {0, 0, 0, 0, 0, 0}, {0.00000740, 0.00000008, -0.00000066, 0.00001948, 0.0, 0.00002058}, {0.00000146, -0.00000002, -0.00000007, 0.00000193, 0.00000001, 0.00000111}, {0.00000149, -0.00000004, 0.0, 0.00000237, 0.0, 0.00000148},
										   {0, 0, 0, 0, 0, 0}, {0.00000740, 0.00000008, -0.00000066, 0.00001948, 0.0, 0.00002058}, {0.00000146, -0.00000002, -0.00000007, 0.00000193, 0.00000001, 0.00000111}, {0.00000149, -0.00000004, 0.0, 0.00000237, 0.0, 0.00000148},
										   {0, 0, 0, 0, 0, 0}, {0.00000740, 0.00000008, -0.00000066, 0.00001948, 0.0, 0.00002058}, {0.00000146, -0.00000002, -0.00000007, 0.00000193, 0.00000001, 0.00000111}, {0.00000149, -0.00000004, 0.0, 0.00000237, 0.0, 0.00000148}
									     };
}

// 紀錄手臂(黑金剛)與手掌(新手掌)的馬達參數
namespace NTU_ArmHand
{
	// 馬達轉一圈的 Encoder Count = Encoder_line * 4倍頻
	const unsigned int Encoder_Count = 512*4;
	

	// 手臂手掌 每一軸GearBox減速比 
	const double Robot_Gr[] = { 200, 250, 200, 250, 200, 300, // 黑金剛(手臂)
								690, 200, 200, 200,           // 大拇指
								200, 200, 200,                // 食指
								200, 200, 200,                // 中指
								200, 200, 200,                // 無名指
								200, 200, 200                 // 小拇指
							  };

	// 手臂手掌 每軸馬達最大轉速(單位RPM)
	const double Motor_MaxSpeed[] = { 8000, 8000, 6000, 6000, 6000, 8000, // 黑金剛(手臂)
									  38100, 4140, 4140, 4140,            // 大拇指
									  4140, 4140, 4140,                   // 食指
									  4140, 4140, 4140,                   // 中指
									  4140, 4140, 4140,                   // 無名指
									  4140, 4140, 4140,                   // 小拇指
									};
	
	// Robot 每軸馬達 Torque Const: Kt (單位：mNm/A)
	const double Motor_Kt[] = { 39.8, 39.8, 34.6, 34.6, 34.6, 32.1,  // 黑金剛(手臂)
							    5.29, 8.40, 8.40, 8.40,              // 大拇指
		                        8.40, 8.40, 8.40,                    // 食指
								8.40, 8.40, 8.40,                    // 中指
								8.40, 8.40, 8.40,                    // 無名指
								8.40, 8.40, 8.40                     // 小拇指
	                          };

	// Robot 每軸馬達 Peak Current: (單位：A)
	const double Motor_PeakCurrent[] = { 6.0, 6.0, 2.0, 2.0, 2.0, 1.0,  // 黑金剛(手臂)
	                                     3.0, 1.5, 1.5, 1.5,            // 大拇指
	                                     1.5, 1.5, 1.5,                 // 食指
										 1.5, 1.5, 1.5,                 // 中指
										 1.5, 1.5, 1.5,                 // 無名指
										 1.5, 1.5, 1.5                  // 小拇指
	                                   };

	// iPOS3604 Output current / axis: 4 A continuous, 10 Apeak
	const double Drive_PeakCurrent = 10; // (單位：A)
}
